// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greet.proto

package greetpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Greet Unary
type GreetRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetRequest) Reset()         { *m = GreetRequest{} }
func (m *GreetRequest) String() string { return proto.CompactTextString(m) }
func (*GreetRequest) ProtoMessage()    {}
func (*GreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{0}
}

func (m *GreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequest.Unmarshal(m, b)
}
func (m *GreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequest.Marshal(b, m, deterministic)
}
func (m *GreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequest.Merge(m, src)
}
func (m *GreetRequest) XXX_Size() int {
	return xxx_messageInfo_GreetRequest.Size(m)
}
func (m *GreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequest proto.InternalMessageInfo

func (m *GreetRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

type GreetResponse struct {
	Greet                string   `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetResponse) Reset()         { *m = GreetResponse{} }
func (m *GreetResponse) String() string { return proto.CompactTextString(m) }
func (*GreetResponse) ProtoMessage()    {}
func (*GreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{1}
}

func (m *GreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponse.Unmarshal(m, b)
}
func (m *GreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponse.Marshal(b, m, deterministic)
}
func (m *GreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponse.Merge(m, src)
}
func (m *GreetResponse) XXX_Size() int {
	return xxx_messageInfo_GreetResponse.Size(m)
}
func (m *GreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponse proto.InternalMessageInfo

func (m *GreetResponse) GetGreet() string {
	if m != nil {
		return m.Greet
	}
	return ""
}

// Greet Stream Server
type GreetStreamRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetStreamRequest) Reset()         { *m = GreetStreamRequest{} }
func (m *GreetStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GreetStreamRequest) ProtoMessage()    {}
func (*GreetStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{2}
}

func (m *GreetStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetStreamRequest.Unmarshal(m, b)
}
func (m *GreetStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetStreamRequest.Marshal(b, m, deterministic)
}
func (m *GreetStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetStreamRequest.Merge(m, src)
}
func (m *GreetStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GreetStreamRequest.Size(m)
}
func (m *GreetStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetStreamRequest proto.InternalMessageInfo

func (m *GreetStreamRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

type GreetStreamResponse struct {
	Greet                string   `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetStreamResponse) Reset()         { *m = GreetStreamResponse{} }
func (m *GreetStreamResponse) String() string { return proto.CompactTextString(m) }
func (*GreetStreamResponse) ProtoMessage()    {}
func (*GreetStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{3}
}

func (m *GreetStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetStreamResponse.Unmarshal(m, b)
}
func (m *GreetStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetStreamResponse.Marshal(b, m, deterministic)
}
func (m *GreetStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetStreamResponse.Merge(m, src)
}
func (m *GreetStreamResponse) XXX_Size() int {
	return xxx_messageInfo_GreetStreamResponse.Size(m)
}
func (m *GreetStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetStreamResponse proto.InternalMessageInfo

func (m *GreetStreamResponse) GetGreet() string {
	if m != nil {
		return m.Greet
	}
	return ""
}

// Greet Stream Client
type GreetClientStreamRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetClientStreamRequest) Reset()         { *m = GreetClientStreamRequest{} }
func (m *GreetClientStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GreetClientStreamRequest) ProtoMessage()    {}
func (*GreetClientStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{4}
}

func (m *GreetClientStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetClientStreamRequest.Unmarshal(m, b)
}
func (m *GreetClientStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetClientStreamRequest.Marshal(b, m, deterministic)
}
func (m *GreetClientStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetClientStreamRequest.Merge(m, src)
}
func (m *GreetClientStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GreetClientStreamRequest.Size(m)
}
func (m *GreetClientStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetClientStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetClientStreamRequest proto.InternalMessageInfo

func (m *GreetClientStreamRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

type GreetClientStreamResponse struct {
	Greet                string   `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetClientStreamResponse) Reset()         { *m = GreetClientStreamResponse{} }
func (m *GreetClientStreamResponse) String() string { return proto.CompactTextString(m) }
func (*GreetClientStreamResponse) ProtoMessage()    {}
func (*GreetClientStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{5}
}

func (m *GreetClientStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetClientStreamResponse.Unmarshal(m, b)
}
func (m *GreetClientStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetClientStreamResponse.Marshal(b, m, deterministic)
}
func (m *GreetClientStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetClientStreamResponse.Merge(m, src)
}
func (m *GreetClientStreamResponse) XXX_Size() int {
	return xxx_messageInfo_GreetClientStreamResponse.Size(m)
}
func (m *GreetClientStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetClientStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetClientStreamResponse proto.InternalMessageInfo

func (m *GreetClientStreamResponse) GetGreet() string {
	if m != nil {
		return m.Greet
	}
	return ""
}

// Greet Stream Client & Serve
type GreetEveryoneRequest struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetEveryoneRequest) Reset()         { *m = GreetEveryoneRequest{} }
func (m *GreetEveryoneRequest) String() string { return proto.CompactTextString(m) }
func (*GreetEveryoneRequest) ProtoMessage()    {}
func (*GreetEveryoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{6}
}

func (m *GreetEveryoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetEveryoneRequest.Unmarshal(m, b)
}
func (m *GreetEveryoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetEveryoneRequest.Marshal(b, m, deterministic)
}
func (m *GreetEveryoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetEveryoneRequest.Merge(m, src)
}
func (m *GreetEveryoneRequest) XXX_Size() int {
	return xxx_messageInfo_GreetEveryoneRequest.Size(m)
}
func (m *GreetEveryoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetEveryoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetEveryoneRequest proto.InternalMessageInfo

func (m *GreetEveryoneRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

type GreetEveryoneResponse struct {
	Greet                string   `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetEveryoneResponse) Reset()         { *m = GreetEveryoneResponse{} }
func (m *GreetEveryoneResponse) String() string { return proto.CompactTextString(m) }
func (*GreetEveryoneResponse) ProtoMessage()    {}
func (*GreetEveryoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{7}
}

func (m *GreetEveryoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetEveryoneResponse.Unmarshal(m, b)
}
func (m *GreetEveryoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetEveryoneResponse.Marshal(b, m, deterministic)
}
func (m *GreetEveryoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetEveryoneResponse.Merge(m, src)
}
func (m *GreetEveryoneResponse) XXX_Size() int {
	return xxx_messageInfo_GreetEveryoneResponse.Size(m)
}
func (m *GreetEveryoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetEveryoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetEveryoneResponse proto.InternalMessageInfo

func (m *GreetEveryoneResponse) GetGreet() string {
	if m != nil {
		return m.Greet
	}
	return ""
}

func init() {
	proto.RegisterType((*GreetRequest)(nil), "greet.GreetRequest")
	proto.RegisterType((*GreetResponse)(nil), "greet.GreetResponse")
	proto.RegisterType((*GreetStreamRequest)(nil), "greet.GreetStreamRequest")
	proto.RegisterType((*GreetStreamResponse)(nil), "greet.GreetStreamResponse")
	proto.RegisterType((*GreetClientStreamRequest)(nil), "greet.GreetClientStreamRequest")
	proto.RegisterType((*GreetClientStreamResponse)(nil), "greet.GreetClientStreamResponse")
	proto.RegisterType((*GreetEveryoneRequest)(nil), "greet.GreetEveryoneRequest")
	proto.RegisterType((*GreetEveryoneResponse)(nil), "greet.GreetEveryoneResponse")
}

func init() {
	proto.RegisterFile("greet.proto", fileDescriptor_32c0044392f32579)
}

var fileDescriptor_32c0044392f32579 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2f, 0x4a, 0x4d,
	0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x74, 0xb9, 0x78, 0xdc,
	0x41, 0x8c, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x59, 0x2e, 0xae, 0xb4, 0xcc, 0xa2,
	0xe2, 0x92, 0xf8, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x4e, 0xb0,
	0x88, 0x5f, 0x62, 0x6e, 0xaa, 0x92, 0x2a, 0x17, 0x2f, 0x54, 0x79, 0x71, 0x41, 0x7e, 0x5e, 0x71,
	0xaa, 0x90, 0x08, 0x17, 0xc4, 0x20, 0xa8, 0x52, 0xa8, 0xa9, 0xc6, 0x5c, 0x42, 0x60, 0x65, 0xc1,
	0x25, 0x45, 0xa9, 0x89, 0xb9, 0x44, 0x9a, 0xad, 0xcd, 0x25, 0x8c, 0xa2, 0x09, 0xaf, 0x0d, 0x96,
	0x5c, 0x12, 0x60, 0xc5, 0xce, 0x39, 0x99, 0xa9, 0x79, 0xa4, 0xd9, 0x63, 0xc8, 0x25, 0x89, 0x45,
	0x2b, 0x5e, 0xdb, 0x4c, 0xb9, 0x44, 0xc0, 0x5a, 0x5c, 0xcb, 0x52, 0x8b, 0x2a, 0xf3, 0xf3, 0x52,
	0x89, 0xb4, 0x49, 0x97, 0x4b, 0x14, 0x4d, 0x1b, 0x3e, 0x5b, 0x8c, 0xf6, 0x30, 0x41, 0x23, 0x23,
	0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x84, 0x8b, 0x15, 0xcc, 0x17, 0x12, 0xd6, 0x83,
	0x44, 0x1d, 0x72, 0x54, 0x49, 0x89, 0xa0, 0x0a, 0x42, 0x8c, 0x56, 0x62, 0x10, 0xf2, 0xe0, 0xe2,
	0x46, 0x0a, 0x47, 0x21, 0x49, 0x64, 0x65, 0x28, 0x01, 0x25, 0x25, 0x85, 0x4d, 0x0a, 0x66, 0x8e,
	0x01, 0xa3, 0x50, 0x14, 0x97, 0x20, 0x46, 0x48, 0x09, 0xc9, 0x23, 0x6b, 0xc2, 0x12, 0xfc, 0x52,
	0x0a, 0xb8, 0x15, 0xc0, 0xcc, 0xd6, 0x60, 0x14, 0x0a, 0x80, 0xa6, 0x24, 0x58, 0xd8, 0x08, 0x49,
	0x23, 0x6b, 0x43, 0x0b, 0x68, 0x29, 0x19, 0xec, 0x92, 0x08, 0xf3, 0x0c, 0x18, 0x9d, 0x38, 0xa3,
	0xd8, 0xc1, 0x8a, 0x0a, 0x92, 0x92, 0xd8, 0xc0, 0x69, 0xdc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0xc6, 0xd7, 0x9d, 0xb3, 0xf2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreetServiceClient is the client API for GreetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreetServiceClient interface {
	Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error)
	GreetStream(ctx context.Context, in *GreetStreamRequest, opts ...grpc.CallOption) (GreetService_GreetStreamClient, error)
	GreetClientStream(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetClientStreamClient, error)
	GreetEveryone(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetEveryoneClient, error)
}

type greetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGreetServiceClient(cc grpc.ClientConnInterface) GreetServiceClient {
	return &greetServiceClient{cc}
}

func (c *greetServiceClient) Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error) {
	out := new(GreetResponse)
	err := c.cc.Invoke(ctx, "/greet.GreetService/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greetServiceClient) GreetStream(ctx context.Context, in *GreetStreamRequest, opts ...grpc.CallOption) (GreetService_GreetStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[0], "/greet.GreetService/GreetStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreetService_GreetStreamClient interface {
	Recv() (*GreetStreamResponse, error)
	grpc.ClientStream
}

type greetServiceGreetStreamClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetStreamClient) Recv() (*GreetStreamResponse, error) {
	m := new(GreetStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) GreetClientStream(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetClientStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[1], "/greet.GreetService/GreetClientStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetClientStreamClient{stream}
	return x, nil
}

type GreetService_GreetClientStreamClient interface {
	Send(*GreetClientStreamRequest) error
	CloseAndRecv() (*GreetClientStreamResponse, error)
	grpc.ClientStream
}

type greetServiceGreetClientStreamClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetClientStreamClient) Send(m *GreetClientStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceGreetClientStreamClient) CloseAndRecv() (*GreetClientStreamResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GreetClientStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) GreetEveryone(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetEveryoneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[2], "/greet.GreetService/GreetEveryone", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetEveryoneClient{stream}
	return x, nil
}

type GreetService_GreetEveryoneClient interface {
	Send(*GreetEveryoneRequest) error
	Recv() (*GreetEveryoneResponse, error)
	grpc.ClientStream
}

type greetServiceGreetEveryoneClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetEveryoneClient) Send(m *GreetEveryoneRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceGreetEveryoneClient) Recv() (*GreetEveryoneResponse, error) {
	m := new(GreetEveryoneResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreetServiceServer is the server API for GreetService service.
type GreetServiceServer interface {
	Greet(context.Context, *GreetRequest) (*GreetResponse, error)
	GreetStream(*GreetStreamRequest, GreetService_GreetStreamServer) error
	GreetClientStream(GreetService_GreetClientStreamServer) error
	GreetEveryone(GreetService_GreetEveryoneServer) error
}

// UnimplementedGreetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGreetServiceServer struct {
}

func (*UnimplementedGreetServiceServer) Greet(ctx context.Context, req *GreetRequest) (*GreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}
func (*UnimplementedGreetServiceServer) GreetStream(req *GreetStreamRequest, srv GreetService_GreetStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GreetStream not implemented")
}
func (*UnimplementedGreetServiceServer) GreetClientStream(srv GreetService_GreetClientStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GreetClientStream not implemented")
}
func (*UnimplementedGreetServiceServer) GreetEveryone(srv GreetService_GreetEveryoneServer) error {
	return status.Errorf(codes.Unimplemented, "method GreetEveryone not implemented")
}

func RegisterGreetServiceServer(s *grpc.Server, srv GreetServiceServer) {
	s.RegisterService(&_GreetService_serviceDesc, srv)
}

func _GreetService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greet.GreetService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetServiceServer).Greet(ctx, req.(*GreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreetService_GreetStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GreetStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreetServiceServer).GreetStream(m, &greetServiceGreetStreamServer{stream})
}

type GreetService_GreetStreamServer interface {
	Send(*GreetStreamResponse) error
	grpc.ServerStream
}

type greetServiceGreetStreamServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetStreamServer) Send(m *GreetStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GreetService_GreetClientStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).GreetClientStream(&greetServiceGreetClientStreamServer{stream})
}

type GreetService_GreetClientStreamServer interface {
	SendAndClose(*GreetClientStreamResponse) error
	Recv() (*GreetClientStreamRequest, error)
	grpc.ServerStream
}

type greetServiceGreetClientStreamServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetClientStreamServer) SendAndClose(m *GreetClientStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceGreetClientStreamServer) Recv() (*GreetClientStreamRequest, error) {
	m := new(GreetClientStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreetService_GreetEveryone_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).GreetEveryone(&greetServiceGreetEveryoneServer{stream})
}

type GreetService_GreetEveryoneServer interface {
	Send(*GreetEveryoneResponse) error
	Recv() (*GreetEveryoneRequest, error)
	grpc.ServerStream
}

type greetServiceGreetEveryoneServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetEveryoneServer) Send(m *GreetEveryoneResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceGreetEveryoneServer) Recv() (*GreetEveryoneRequest, error) {
	m := new(GreetEveryoneRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GreetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greet.GreetService",
	HandlerType: (*GreetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _GreetService_Greet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GreetStream",
			Handler:       _GreetService_GreetStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GreetClientStream",
			Handler:       _GreetService_GreetClientStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GreetEveryone",
			Handler:       _GreetService_GreetEveryone_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "greet.proto",
}
